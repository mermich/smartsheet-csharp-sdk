//    #[license]
//    SmartsheetClient SDK for C#
//    %%
//    Copyright (C) 2014 SmartsheetClient
//    %%
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//        
//            http://www.apache.org/licenses/LICENSE-2.0
//        
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//    %[license]

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Smartsheet.Api.Models
{
    /// <summary>
    /// Represents the webhook object. </summary>
    /// <seealso href="http://smartsheet-platform.github.io/api-docs/#webhook-object">Webhook Object Help</seealso>
    public class Webhook : NamedModel
    {
        /// <summary>
        /// API Client Id corresponding to third-party app that created the Webhook. Read-only. Only present if webhook was created by third-party app.
        /// </summary>
        private string apiClientId;

        /// <summary>
        /// ID of the object that is subscribed to. Specified when a webhook is created and cannot be changed..
        /// </summary>
        private long? scopeObjectId;

        /// <summary>
        /// API Client Name corresponding to third-party app that created the Webhook. Read-only. Only present if webhook was created by third-party app.
        /// </summary>
        private string apiClientName;

        /// <summary>
        /// HTTPS URL where callbacks will be sent.
        /// </summary>
        private string callbackUrl;

        /// <summary>
        /// Time of creation. Read-only.
        /// </summary>
        private DateTime? createdAt;

        /// <summary>
        /// Details about the reason the Webhook was disabled. Read-only. Only present when enabled=false
        /// </summary>
        private string disabledDetails;

        /// <summary>
        /// Flag indicating whether the Webhook is on (true) or off (false)
        /// </summary>
        private bool? enabled;

        /// <summary>
        /// Array of the events that are subscribed to. Currently, must be an array of size 1 that contains the string 
        /// value “*.*”, which means “all objects” and “all events”.
        /// </summary>
        private IList<string> events;

        /// <summary>
        /// Time of last modification. Read-only.
        /// </summary>
        private DateTime? modifiedAt;

        /// <summary>
        /// Scope of the subscription. Currently, the only supported value is “sheet”. Specified when a webhook is created and cannot be changed.
        /// </summary>
        private string scope;

        /// <summary>
        /// Shared secret for this webhook, randomly generated by Smartsheet. Read-only. See Authenticating Callbacks for 
        /// details about how this value can be used.
        /// </summary>
        private string sharedSecret;

        /// <summary>
        /// Useful statistics for this webhook. Will only be returned once this webhook has performed a callback attempt. Read-only.
        /// </summary>
        private WebhookStats stats;

        /// <summary>
        /// Webhook status. Read-only. See Webhook Status for list of possible values.
        /// </summary>
        private WebhookStatus? status;

        /// <summary>
        /// Webhook version. Currently, the only supported value is 1. This attribute is intended to ensure backward compatibility as new 
        /// webhook functionality is released. For example, a webhook with a version of 1 is guaranteed to always be sent callback objects 
        /// that are compatible with the version 1 release of webhooks.
        /// </summary>
        private int? version;

        /// <summary>
        /// Get the API Client Id corresponding to third-party app that created the Webhook.
        /// </summary>
        /// <returns> the Client Id </returns>
        public string ApiClientId
        {
            get { return apiClientId; }
            set { apiClientId = value; }
        }

        /// <summary>
        /// Get the ID of the object that is subscribed to.
        /// </summary>
        /// <returns> the ScopeObjectId </returns>
        public long? ScopeObjectId
        {
            get { return scopeObjectId; }
            set { scopeObjectId = value; }
        }

        /// <summary>
        /// Get the API Client Name corresponding to third-party app that created the Webhook.
        /// </summary>
        /// <returns> the Client Name </returns>
        public string ApiClientName
        {
            get { return apiClientName; }
            set { apiClientName = value; }
        }

        /// <summary>
        /// Get the HTTPS URL where callbacks will be sent.
        /// </summary>
        /// <returns> the URL </returns>
        public string CallbackUrl
        {
            get { return callbackUrl; }
            set { callbackUrl = value; }
        }

        /// <summary>
        /// Gets the Time that the webhook was created.
        /// </summary>
        /// <returns> the DateTime </returns>
        public DateTime? CreatedAt
        {
            get { return createdAt; }
            set { createdAt = value; }
        }

        /// <summary>
        /// Get the details about the reason the Webhook was disabled.
        /// </summary>
        /// <returns> the details </returns>
        public string DisabledDetails
        {
            get { return disabledDetails; }
            set { disabledDetails = value; }
        }

        /// <summary>
        /// Get the Flag indicating whether the Webhook is on (true) or off (false).
        /// </summary>
        /// <returns> the enabled flag </returns>
        public bool? Enabled
        {
            get { return enabled; }
            set { enabled = value; }
        }

        /// <summary>
        /// Get the Array of the events that are subscribed to.
        /// </summary>
        /// <returns> the string array </returns>
        public IList<string> Events
        {
            get { return events; }
            set { events = value; }
        }

        /// <summary>
        /// Gets the time that the webhook was modified.
        /// </summary>
        /// <returns> the DateTime </returns>
        public DateTime? ModifiedAt
        {
            get { return modifiedAt; }
            set { modifiedAt = value; }
        }

        /// <summary>
        /// Get the Scope of the subscription.
        /// </summary>
        /// <returns> the Scope </returns>
        public string Scope
        {
            get { return scope; }
            set { scope = value; }
        }

        /// <summary>
        /// Get the Shared secret for this webhook, randomly generated by Smartsheet.
        /// </summary>
        /// <returns> the shared secret </returns>
        public string SharedSecret
        {
            get { return sharedSecret; }
            set { sharedSecret = value; }
        }

        /// <summary>
        /// Get the statistics for this webhook.
        /// </summary>
        /// <returns> the WebhookStats </returns>
        public WebhookStats Stats
        {
            get { return stats; }
            set { stats = value; }
        }

        /// <summary>
        /// Get the Webhook status.
        /// </summary>
        /// <returns> the status </returns>
        public WebhookStatus? Status
        {
            get { return status; }
            set { status = value; }
        }

        /// <summary>
        /// Get the webhook version.
        /// </summary>
        /// <returns> the version </returns>
        public int? Version
        {
            get { return version; }
            set { version = value; }
        }

        /// <summary>
        /// Get the webhook subscope.
        /// </summary>
        /// <returns> the subscope </returns>
        public WebhookSubscope Subscope { get; set; }
    }

    /// <summary>
    /// Represents the webhook subscope object. </summary>
    public class WebhookSubscope
    {
        /// <summary>
        /// A collection of columns to subscribe to. An empty array denotes all columns in the sheet.
        /// </summary>
        public long[] ColumnIds { get; set; }

    }
}
